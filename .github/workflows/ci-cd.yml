name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Frontend and Backend
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js for the frontend and backend
    - name: Set up Node.js for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Set up Node.js for Backend
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 3: Install dependencies for the frontend
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    # Step 4: Build the frontend
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    # Step 5: Install dependencies for the backend
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    # Step 6: Run backend tests
    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Deploy Frontend (example using GitHub Pages)
    - name: Deploy Frontend to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.TOKEN }}
        publish_dir: ./frontend/build

    # Deploy Backend (example using Heroku)
    - name: Deploy Backend to Heroku
      if: github.ref == 'refs/heads/main'
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku git:remote -a <your-heroku-app-name>
        git push heroku main